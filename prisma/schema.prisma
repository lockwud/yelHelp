// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String    @id @default(uuid())
  fullname  String
  gender    gender
  email     String    @unique
  password  String
  contact   String
  address   String
  photoUrl  String
  photoKey  String
  otp       String?   @unique
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  friends   friends[]
}

model doctor {
  id           String    @id @default(uuid())
  firstname    String
  surname      String
  othername    String?
  email        String
  password     String
  contact      String
  photoUrl     String
  photoKey     String
  otp          String?   @unique
  otpexpires   DateTime?
  token        String?
  tokenexpires DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  del_flag     Boolean   @default(false)
}

model friends {
  id          String   @id @default(uuid())
  userId      String
  friendId    String
  status      status
  requesterId String
  responseId  String
  message     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  del_flag    Boolean  @default(false)
  user        user     @relation(fields: [userId], references: [id])
}

model appointment {
  id              String   @id @default(uuid())
  doctorId        String
  patientId       String
  appointmentDate DateTime
  appointmentTime DateTime
  status          status
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  del_flag        Boolean  @default(false)
}

model message {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  message    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  del_flag   Boolean  @default(false)
}

model viewOncemessage {
  id         String   @id @default(uuid())
  userId     String
  messageId  String
  receiverId String
  viewed     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  del_flag   Boolean  @default(false)
}

model chat{
  id          String   @id @default(uuid())
  userId      String
  friendId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  del_flag    Boolean  @default(false)
}


model notification {
  id        String           @id @default(uuid())
  userId    String
  type      notificationType
  message   String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  del_flag  Boolean          @default(false)
}

enum notificationStatus {
  unread
  read
  seen
}

enum notificationType {
  friend_request
  appointment_request
  appointment_accepted
  appointment_declined
  appointment_canceled
  friend_accepted
  friend_declined
  friend_canceled
  message
  chat
}

enum status {
  pending
  accepted
  rejected
  blocked
  blocked_by_requester
  blocked_by_friend
  declined_by_requester
  declined_by_friend
  canceled
}

enum gender {
  male
  female
  trans
}
